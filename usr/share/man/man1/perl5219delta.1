.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.29)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PERL5219DELTA 1"
.TH PERL5219DELTA 1 "2015-05-13" "perl v5.22.0" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
perl5219delta \- what is new for perl v5.21.9
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This document describes differences between the 5.21.8 release and the 5.21.9
release.
.PP
If you are upgrading from an earlier release such as 5.21.7, first read
perl5218delta, which describes differences between 5.21.7 and 5.21.8.
.SH "Notice"
.IX Header "Notice"
With this release we are now in the user-visible changes portion of the code
freeze as we prepare for the next stable release of Perl 5.
.SH "Core Enhancements"
.IX Header "Core Enhancements"
.SS "qr/\eb{gcb}/ is now handled in regular expressions"
.IX Subsection "qr/b{gcb}/ is now handled in regular expressions"
\&\f(CW\*(C`gcb\*(C'\fR stands for Grapheme Cluster Boundary.  It is a Unicode property
that finds the boundary between sequences of characters that look like a
single character to a native speaker of a language.  Perl has long had
the ability to deal with these through the \f(CW\*(C`\eX\*(C'\fR regular escape
sequence.  Now, there is an alternative way of handling these.  See
\&\*(L"\eb{}, \eb, \eB{}, \eB\*(R" in perlrebackslash for details.
.SS "qr/\eb{wb}/ is now handled in regular expressions"
.IX Subsection "qr/b{wb}/ is now handled in regular expressions"
\&\f(CW\*(C`wb\*(C'\fR stands for Word Boundary.  It is a Unicode property
that finds the boundary between words.  This is similar to the plain
\&\f(CW\*(C`\eb\*(C'\fR (without braces) but is more suitable for natural language
processing.  It knows, for example that apostrophes can occur in the
middle of words.  See \*(L"\eb{}, \eb, \eB{}, \eB\*(R" in perlrebackslash for details.
.SS "qr/\eb{sb}/ is now handled in regular expressions"
.IX Subsection "qr/b{sb}/ is now handled in regular expressions"
\&\f(CW\*(C`sb\*(C'\fR stands for Sentence Boundary.  It is a Unicode property
to aid in parsing natural language sentences.
See \*(L"\eb{}, \eb, \eB{}, \eB\*(R" in perlrebackslash for details.
.SS "New bitwise operators"
.IX Subsection "New bitwise operators"
A new experimental facility has been added that makes the four standard
bitwise operators (\f(CW\*(C`& | ^ ~\*(C'\fR) treat their operands consistently as
numbers, and introduces four new dotted operators (\f(CW\*(C`&. |. ^. ~.\*(C'\fR) that
treat their operands consistently as strings.  The same applies to the
assignment variants (\f(CW\*(C`&= |= ^= &.= |.= ^.=\*(C'\fR).
.PP
To use this, enable the \*(L"bitwise\*(R" feature and disable the
\&\*(L"experimental::bitwise\*(R" warnings category.  See \*(L"Bitwise String
Operators\*(R" in perlop for details.  [rt.perl.org #123466]
.ie n .SS """no re"" covers more and is lexical"
.el .SS "\f(CWno re\fP covers more and is lexical"
.IX Subsection "no re covers more and is lexical"
Previously running \f(CW\*(C`no re\*(C'\fR would only turn off a few things. Now it
turns off all the enabled things. For example, previously, you
couldn't turn off debugging, once enabled, inside the same block.
.SH "Incompatible Changes"
.IX Header "Incompatible Changes"
There are no changes intentionally incompatible with 5.21.8.
If any exist, they are bugs, and we request that you submit a
report.  See \*(L"Reporting Bugs\*(R" below.
.SH "Modules and Pragmata"
.IX Header "Modules and Pragmata"
.SS "Updated Modules and Pragmata"
.IX Subsection "Updated Modules and Pragmata"
.IP "\(bu" 4
attributes has been upgraded from version 0.25 to 0.26.
.IP "\(bu" 4
B has been upgraded from version 1.55 to 1.56.
.IP "\(bu" 4
B::Debug has been upgraded from version 1.22 to 1.23.
.IP "\(bu" 4
B::Deparse has been upgraded from version 1.32 to 1.33.
.RS 4
.IP "\(bu" 4
Deparse now provides a defined state sub in inner subs.
.IP "\(bu" 4
Since version Perl 5.21.6, Deparse would croak on special constants, but
this has now been fixed.
.RE
.RS 4
.RE
.IP "\(bu" 4
Benchmark has been upgraded from version 1.19 to 1.20.
.IP "\(bu" 4
bigint, bignum, bigrat have been upgraded to version 0.39.
.Sp
Document in \s-1CAVEATS\s0 that using strings as numbers won't always invoke
the big number overloading, and how to invoke it.  [rt.perl.org #123064]
.IP "\(bu" 4
bignum has been upgraded from version 0.38 to 0.39.
.IP "\(bu" 4
Carp has been upgraded from version 1.34 to 1.35.
.RS 4
.IP "\(bu" 4
Carp now handles non-ASCII platforms better.
.IP "\(bu" 4
Off-by-one error fix for Perl < 5.14.
.RE
.RS 4
.RE
.IP "\(bu" 4
Config::Perl::V has been upgraded from version 0.22 to 0.23.
.IP "\(bu" 4
constant has been upgraded from version 1.32 to 1.33.
.IP "\(bu" 4
CPAN::Meta::Requirements has been upgraded from version 2.131 to 2.132
.IP "\(bu" 4
Data::Dumper has been upgraded from version 2.156 to 2.157.
.IP "\(bu" 4
Devel::Peek has been upgraded from version 1.21 to 1.22.
.IP "\(bu" 4
DynaLoader has been upgraded from version 1.30 to 1.31.
.IP "\(bu" 4
Encode has been upgraded from version 2.67 to 2.70.
.Sp
Building in \*(C+ mode on Windows now works.
.IP "\(bu" 4
encoding has been upgraded from version 2.12 to 2.13.
.IP "\(bu" 4
Errno has been upgraded from version 1.22 to 1.23.
.Sp
Add \f(CW\*(C`\-P\*(C'\fR to the preprocessor command-line on \s-1GCC 5.  GCC\s0 added extra
line directives, breaking parsing of error code definitions.  [rt.perl.org
#123784]
.IP "\(bu" 4
ExtUtils::Miniperl has been upgraded from version 1.03 to 1.04.
.IP "\(bu" 4
feature has been upgraded from version 1.39 to 1.40.
.IP "\(bu" 4
HTTP::Tiny has been upgraded from version 0.053 to 0.054.
.IP "\(bu" 4
Opcode has been upgraded from version 1.31 to 1.32.
.IP "\(bu" 4
overload has been upgraded from version 1.24 to 1.25.
.IP "\(bu" 4
Perl::OSType has been upgraded from version 1.007 to 1.008.
.IP "\(bu" 4
perlfaq has been upgraded from version 5.0150046 to 5.021009.
.IP "\(bu" 4
PerlIO::scalar has been upgraded from version 0.21 to 0.22.
.Sp
Attempting to write at file positions impossible for the platform now
fail early rather than wrapping at 4GB.
.IP "\(bu" 4
Pod::Parser has been upgraded from version 1.62 to 1.63.
.IP "\(bu" 4
Pod::Perldoc has been upgraded from version 3.24 to 3.25.
.IP "\(bu" 4
\&\s-1POSIX\s0 has been upgraded from version 1.49 to 1.51.
.IP "\(bu" 4
re has been upgraded from version 0.30 to 0.31.
.IP "\(bu" 4
Socket has been upgraded from version 2.016 to 2.018.
.IP "\(bu" 4
Storable has been upgraded from version 2.52 to 2.53.
.IP "\(bu" 4
Test::Simple has been upgraded from version 1.301001_097 to 1.301001_098.
.IP "\(bu" 4
threads::shared has been upgraded from version 1.47 to 1.48.
.IP "\(bu" 4
Unicode::Collate has been upgraded from version 1.10 to 1.11.
.IP "\(bu" 4
Unicode::UCD has been upgraded from version 0.59 to 0.61.
.RS 4
.IP "\(bu" 4
A new function \fIproperty_values()\fR
has been added to return a given property's possible values.
.IP "\(bu" 4
A new function \fIcharprop()\fR
has been added to return the value of a given property for a given code
point.
.IP "\(bu" 4
A new function \fIcharprops_all()\fR
has been added to return the values of all Unicode properties for a
given code point.
.IP "\(bu" 4
A bug has been fixed so that \fIpropaliases()\fR
returns the correct short and long names for the Perl extensions where
it was incorrect.
.IP "\(bu" 4
A bug has been fixed so that
\&\fIprop_value_aliases()\fR
returns \f(CW\*(C`undef\*(C'\fR instead of a wrong result for properties that are Perl
extensions.
.IP "\(bu" 4
This module now works on \s-1EBCDIC\s0 platforms.
.RE
.RS 4
.RE
.IP "\(bu" 4
VMS::Stdio has been upgraded from version 2.4 to 2.41.
.IP "\(bu" 4
warnings has been upgraded from version 1.30 to 1.31.
.IP "\(bu" 4
Win32 has been upgraded from version 0.49 to 0.51.
.Sp
\&\fIGetOSName()\fR now supports Windows 8.1, and building in \*(C+ mode now works.
.IP "\(bu" 4
Win32API::File has been upgraded from version 0.1201 to 0.1202
.Sp
Building in \*(C+ mode now works.
.SH "Documentation"
.IX Header "Documentation"
.SS "New Documentation"
.IX Subsection "New Documentation"
\fIperlrebackslash\fR
.IX Subsection "perlrebackslash"
.IP "\(bu" 4
Added documentation of \f(CW\*(C`\eb{sb}\*(C'\fR, \f(CW\*(C`\eb{wb}\*(C'\fR, \f(CW\*(C`\eb{gcb}\*(C'\fR, and \f(CW\*(C`\eb{g}\*(C'\fR.
.PP
\fIperlrequick\fR
.IX Subsection "perlrequick"
.IP "\(bu" 4
Added example for \f(CW\*(C`\eb{wb}\*(C'\fR.
.PP
\fIperlretut\fR
.IX Subsection "perlretut"
.IP "\(bu" 4
Added example for \f(CW\*(C`\eb{wb}\*(C'\fR.
.SS "Changes to Existing Documentation"
.IX Subsection "Changes to Existing Documentation"
\fIperlunicode\fR
.IX Subsection "perlunicode"
.IP "\(bu" 4
Update \fBDefault Word Boundaries\fR under
\&\*(L"Unicode Regular Expression Support Level\*(R" in perlunicode's
\&\fBExtended Unicode Support\fR.
.PP
\fIperlunicook\fR
.IX Subsection "perlunicook"
.IP "\(bu" 4
Clarify that autodie >= 2.26 works with \f(CW\*(C`use open\*(C'\fR.
.IP "\(bu" 4
Correct warning message for \f(CW\*(C`use autodie\*(C'\fR and \f(CW\*(C`use open\*(C'\fR.
.PP
\fIperlfaq\fR
.IX Subsection "perlfaq"
.IP "\(bu" 4
perlfaq has been synchronized with version 5.021009 from \s-1CPAN.\s0
.PP
\fIperlop\fR
.IX Subsection "perlop"
.IP "\(bu" 4
Correct the version number which removes \f(CW\*(C`m?PATTERN?\*(C'\fR. It was Perl 5.22.0.
.PP
\fIperlvar\fR
.IX Subsection "perlvar"
.IP "\(bu" 4
Further clarify version number representations and usage.
.PP
\fIperlmodstyle\fR
.IX Subsection "perlmodstyle"
.IP "\(bu" 4
Instead of pointing to the module list, we are now pointing to
PrePAN <http://prepan.org/>.
.SH "Diagnostics"
.IX Header "Diagnostics"
The following additions or changes have been made to diagnostic output,
including warnings and fatal error messages.  For the complete list of
diagnostic messages, see perldiag.
.SS "New Diagnostics"
.IX Subsection "New Diagnostics"
\fINew Warnings\fR
.IX Subsection "New Warnings"
.IP "\(bu" 4
\&'%s' is an unknown bound type in regex
.Sp
You used \f(CW\*(C`\eb{...}\*(C'\fR or \f(CW\*(C`\eB{...}\*(C'\fR and the \f(CW\*(C`...\*(C'\fR is not known to
Perl.  The current valid ones are given in
\&\*(L"\eb{}, \eb, \eB{}, \eB\*(R" in perlrebackslash.
.IP "\(bu" 4
Use of \eb{} for non\-UTF\-8 locale is wrong.  Assuming a \s-1UTF\-8\s0 locale
.Sp
You are matching a regular expression using locale rules,
and a Unicode boundary is being matched, but the locale is not a Unicode
one.  This doesn't make sense.  Perl will continue, assuming a Unicode
(\s-1UTF\-8\s0) locale, but the results could well be wrong except if the locale
happens to be \s-1ISO\-8859\-1 \s0(Latin1) where this message is spurious and can
be ignored.
.IP "\(bu" 4
Using /u for '%s' instead of /%s in regex; marked by <\-\- \s-1HERE\s0 in m/%s/
.Sp
You used a Unicode boundary (\f(CW\*(C`\eb{...}\*(C'\fR or \f(CW\*(C`\eB{...}\*(C'\fR) in a
portion of a regular expression where the character set modifiers \f(CW\*(C`/a\*(C'\fR
or \f(CW\*(C`/aa\*(C'\fR are in effect.  These two modifiers indicate an \s-1ASCII\s0
interpretation, and this doesn't make sense for a Unicode definition.
The generated regular expression will compile so that the boundary uses
all of Unicode.  No other portion of the regular expression is affected.
.IP "\(bu" 4
The bitwise feature is experimental
.Sp
This warning is emitted if you use bitwise
operators (\f(CW\*(C`& | ^ ~ &. |. ^. ~.\*(C'\fR) with the \*(L"bitwise\*(R" feature enabled.
Simply suppress the warning if you want to use the feature, but know
that in doing so you are taking the risk of using an experimental
feature which may change or be removed in a future Perl version:
.Sp
.Vb 3
\&    no warnings "experimental::bitwise";
\&    use feature "bitwise";
\&    $x |.= $y;
.Ve
.SS "Changes to Existing Diagnostics"
.IX Subsection "Changes to Existing Diagnostics"
.IP "\(bu" 4
\&\fBUnusual use of \f(CB%s\fB in void context\fR has been removed. It might
come back in a future release.
.IP "\(bu" 4
Argument \*(L"%s\*(R" isn't numeric%s
now adds the following note:
.Sp
.Vb 4
\&    Note that for the C<Inf> and C<NaN> (infinity and not\-a\-number) the
\&    definition of "numeric" is somewhat unusual: the strings themselves
\&    (like "Inf") are considered numeric, and anything following them is
\&    considered non\-numeric.
.Ve
.IP "\(bu" 4
\&\fBPossible precedence problem on bitwise \f(CB%c\fB operator\fR reworded as
Possible precedence problem on bitwise \f(CW%s\fR operator.
.SH "Utility Changes"
.IX Header "Utility Changes"
.SS "h2ph"
.IX Subsection "h2ph"
.IP "\(bu" 4
\&\fIh2ph\fR now handles hexadecimal constants in the compiler's predefined
macro definitions, as visible in \f(CW$Config{cppsymbols}\fR.  [rt.perl.org
#123784]
.SS "encguess"
.IX Subsection "encguess"
.IP "\(bu" 4
No longer depends on non-core module anymore.
.SH "Configuration and Compilation"
.IX Header "Configuration and Compilation"
.IP "\(bu" 4
\&\fIConfigure\fR now checks for \fIlrintl\fR, \fIlroundl\fR, \fIllrintl\fR, and \fIllroundl\fR.
.SH "Testing"
.IX Header "Testing"
.IP "\(bu" 4
Added \fIt/op/dump.t\fR for testing \f(CW\*(C`dump\*(C'\fR.
.SH "Deprecations"
.IX Header "Deprecations"
.ie n .SS "Support for new warnings categories outside of ""all"""
.el .SS "Support for new warnings categories outside of ``all''"
.IX Subsection "Support for new warnings categories outside of all"
The new option for warnings outside the \fBall\fR category in the warnings
pragma has been removed for now.
.PP
For more context, you can refer to the following
discussion thread <http://www.nntp.perl.org/group/perl.perl5.porters/2015/01/msg225066.html>.
.SH "Platform Support"
.IX Header "Platform Support"
.SS "Platform-Specific Notes"
.IX Subsection "Platform-Specific Notes"
\fIWin32\fR
.IX Subsection "Win32"
.IP "\(bu" 4
Perl can now be built in \*(C+ mode on Windows by setting the makefile macro
\&\f(CW\*(C`USE_CPLUSPLUS\*(C'\fR to the value \*(L"define\*(R".
.IP "\(bu" 4
List form pipe open no longer falls back to the shell.
.IP "\(bu" 4
In release 5.21.8 compiling on \s-1VC\s0 with dmake was broken. Fixed.
.IP "\(bu" 4
New \f(CW\*(C`DebugSymbols\*(C'\fR and \f(CW\*(C`DebugFull\*(C'\fR configuration options added to
Windows makefiles.
.IP "\(bu" 4
B now compiles again on Windows.
.PP
\fISolaris\fR
.IX Subsection "Solaris"
.PP
Look for the Sun Studio compiler in both \fI/opt/solstudio*\fR and
\&\fI/opt/solarisstudio*\fR.
.PP
\fI\s-1VMS\s0\fR
.IX Subsection "VMS"
.IP "\(bu" 4
When spawning a subprocess without waiting, the return value is now
the correct \s-1PID.\s0
.IP "\(bu" 4
Fix a prototype so linking doesn't fail under the \s-1VMS \*(C+\s0 compiler.
.SH "Selected Bug Fixes"
.IX Header "Selected Bug Fixes"
.IP "\(bu" 4
Patterns starting with \f(CW\*(C`/.*/\*(C'\fR are now fast again. [rt.perl.org #123743]
.IP "\(bu" 4
The original visible value of \f(CW$/\fR is now preserved when it is set to
an invalid value.  Previously if you set \f(CW$/\fR to a reference to an
array, for example, perl would produce a runtime error and not set
\&\f(CW\*(C`PL_rs\*(C'\fR, but perl code that checked \f(CW$/\fR would see the array
reference.  [rt.perl.org #123218]
.IP "\(bu" 4
In a regular expression pattern, a \s-1POSIX\s0 class, like \f(CW\*(C`[:ascii:]\*(C'\fR, must
be inside a bracketed character class, like \f(CW\*(C`/qr[[:ascii:]]\*(C'\fR.  A
warning is issued when something looking like a \s-1POSIX\s0 class is not
inside a bracketed class.  That warning wasn't getting generated when
the \s-1POSIX\s0 class was negated: \f(CW\*(C`[:^ascii:]\*(C'\fR.  This is now fixed.
.IP "\(bu" 4
Fix a couple of other size calculation overflows.  [rt.perl.org #123554]
.IP "\(bu" 4
A bug introduced in 5.21.6, \f(CW\*(C`dump LABEL\*(C'\fR acted the same as \f(CW\*(C`goto
LABEL\*(C'\fR.  This has been fixed.  [rt.perl.org #123836]
.IP "\(bu" 4
Perl 5.14.0 introduced a bug whereby \f(CW\*(C`eval { LABEL: }\*(C'\fR would crash.  This
has been fixed.  [rt.perl.org #123652]
.IP "\(bu" 4
Various crashes due to the parser getting confused by syntax errors have
been fixed.  [rt.perl.org #123617] [rt.perl.org #123737]
[rt.perl.org #123753] [rt.perl.org #123677]
.IP "\(bu" 4
Code like \f(CW\*(C`/$a[/\*(C'\fR used to read the next line of input and treat it as
though it came immediately after the opening bracket.  Some invalid code
consequently would parse and run, but some code caused crashes, so this is
now disallowed.  [rt.perl.org #123712]
.IP "\(bu" 4
Fix argument underflow for \f(CW\*(C`pack\*(C'\fR.  [rt.perl.org #123874]
.IP "\(bu" 4
Fix handling of non-strict \f(CW\*(C`\ex{}\*(C'\fR. Now \f(CW\*(C`\ex{}\*(C'\fR is equivalent to \f(CW\*(C`\ex{0}\*(C'\fR
instead of faulting.
.IP "\(bu" 4
\&\f(CW\*(C`stat \-t\*(C'\fR is now no longer treated as stackable, just like \f(CW\*(C`\-t stat\*(C'\fR.
[rt.perl.org #123816]
.IP "\(bu" 4
The following no longer causes a \s-1SEGV: \s0\f(CW\*(C`qr{x+(y(?0))*}\*(C'\fR.
.IP "\(bu" 4
Fixed infinite loop in parsing backrefs in regexp patterns.
.IP "\(bu" 4
Several minor bug fixes in behavior of Inf and NaN, including
warnings when stringifying Inf-like or NaN-like strings. For example,
\&\*(L"NaNcy\*(R" doesn't numify to NaN anymore.
.IP "\(bu" 4
Only stringy classnames are now shared. This fixes some failures in autobox.  [rt.cpan.org #100819]
.SH "Acknowledgements"
.IX Header "Acknowledgements"
Perl 5.21.9 represents approximately 4 weeks of development since Perl 5.21.8
and contains approximately 170,000 lines of changes across 520 files from 32
authors.
.PP
Excluding auto-generated files, documentation and release tools, there were
approximately 160,000 lines of changes to 270 .pm, .t, .c and .h files.
.PP
Perl continues to flourish into its third decade thanks to a vibrant community
of users and developers. The following people are known to have contributed the
improvements that became Perl 5.21.9:
.PP
Chad Granum, Chris 'BinGOs' Williams, Craig A. Berry, Dagfinn Ilmari
Mannsa\*oker, Daniel Dragan, David Golden, David Mitchell, Father Chrysostomos,
H.Merijn Brand, Hugo van der Sanden, James E Keenan, James Raspass, Jarkko
Hietaniemi, Karen Etheridge, Karl Williamson, Kent Fredric, Lajos Veres, Leon
Timmermans, Lukas Mai, Mathieu Arnold, Matthew Horsfall, Peter Martini, Petr
Pi\*'saX, Randy Stauner, Ricardo Signes, Sawyer X, Shlomi Fish, Sisyphus, Steve
Hay, Tony Cook, Yves Orton, \*(Aevar Arnfjo\*:r\*(d- Bjarmason.
.PP
The list above is almost certainly incomplete as it is automatically generated
from version control history. In particular, it does not include the names of
the (very much appreciated) contributors who reported issues to the Perl bug
tracker.
.PP
Many of the changes included in this version originated in the \s-1CPAN\s0 modules
included in Perl's core. We're grateful to the entire \s-1CPAN\s0 community for
helping Perl to flourish.
.PP
For a more complete list of all of Perl's historical contributors, please see
the \fI\s-1AUTHORS\s0\fR file in the Perl source distribution.
.SH "Reporting Bugs"
.IX Header "Reporting Bugs"
If you find what you think is a bug, you might check the articles recently
posted to the comp.lang.perl.misc newsgroup and the perl bug database at
https://rt.perl.org/ .  There may also be information at
http://www.perl.org/ , the Perl Home Page.
.PP
If you believe you have an unreported bug, please run the perlbug program
included with your release.  Be sure to trim your bug down to a tiny but
sufficient test case.  Your bug report, along with the output of \f(CW\*(C`perl \-V\*(C'\fR,
will be sent off to perlbug@perl.org to be analysed by the Perl porting team.
.PP
If the bug you are reporting has security implications, which make it
inappropriate to send to a publicly archived mailing list, then please send it
to perl5\-security\-report@perl.org.  This points to a closed subscription
unarchived mailing list, which includes all the core committers, who will be
able to help assess the impact of issues, figure out a resolution, and help
co-ordinate the release of patches to mitigate or fix the problem across all
platforms on which Perl is supported.  Please only use this address for
security issues in the Perl core, not for modules independently distributed on
\&\s-1CPAN.\s0
.SH "SEE ALSO"
.IX Header "SEE ALSO"
The \fIChanges\fR file for an explanation of how to view exhaustive details on
what changed.
.PP
The \fI\s-1INSTALL\s0\fR file for how to build Perl.
.PP
The \fI\s-1README\s0\fR file for general stuff.
.PP
The \fIArtistic\fR and \fICopying\fR files for copyright information.
